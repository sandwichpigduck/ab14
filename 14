def func1(arg1, arg2):
    var19 = func2(arg2, arg1)
    var35 = var22(arg1, arg2)
    var63 = func7(var35, var19)
    if var19 < var19:
        var64 = var63 - (var35 | var63)
    else:
        var64 = (arg2 - arg2) ^ 373154718 ^ var63
    var65 = (var35 & (-802 - 1702332472 - (((var19 & arg2) + (-667795138 | arg1) | var35) ^ var63 | (-2109749890 ^ -867) | var35 + var35 | 1811970148 ^ var19 + var35) - var63 ^ 598) & var35 & var35 ^ var63) & var35
    var66 = ((-120278249 + var63) & -1120713597 & (var65 | arg1)) - (var65 & (((var19 + -1536739687 & ((arg1 - arg1 & var19 + -656002773 | ((347519746 ^ 1904916977 & var65) | arg1)) ^ var35)) - var65) + 882 - var19) | arg1 - var63)
    var67 = var65 - var35 + (arg1 - var19) - -886 - (arg2 + var65 | ((arg1 & arg2) + (var63 - (var63 & var19 & (arg1 | (var66 ^ var66 & (arg2 | arg2 - arg1)) + var65))) ^ 1415574178 ^ var19) | var66)
    var68 = -214734368 ^ var66 & (var19 ^ var19)
    result = (arg2 ^ -922292055) + var35 + arg1 - -1423169681 ^ var65 & arg1
    return result
def func7(arg36, arg37):
    var38 = (arg36 + 865 & arg36) + -898
    var39 = 911806862 | -664020791
    var40 = (arg36 & var39 ^ arg36) ^ arg36
    var41 = 1740791013 | (arg36 | -489)
    if arg36 < var40:
        var42 = arg36 & arg36 ^ arg37
    else:
        var42 = (arg37 + (arg36 | var41)) & var38
    if var38 < var39:
        var43 = var38 - var41
    else:
        var43 = (-110178193 - arg36) & arg36
    var44 = var38 - arg36 + var41
    var45 = var41 + var38 + arg37
    var46 = (var39 | arg36) | var39
    var47 = -15860744 & (-574096205 | var45)
    var48 = (-800 | var44) ^ -519206715
    var49 = var46 | 38014069
    if var44 < var41:
        var50 = arg36 - var46 - var46 + var41
    else:
        var50 = var44 ^ var45
    var51 = var38 & arg36 | var45 - var47
    var52 = (var47 + var39) & arg37 - var48
    var53 = var45 - var49
    var54 = var53 + (var45 & var46 ^ var45)
    var55 = arg37 & -543 + arg36 & 478
    var56 = var54 & 87
    var57 = 2098740897 - var52 ^ -238 | var55
    var58 = ((var48 ^ var55) | var56) & var46
    if var40 < var41:
        var59 = arg36 | (var57 & var53)
    else:
        var59 = (var52 + var38 + var41) - var53
    var60 = var38 - var54 | var48
    var61 = arg36 - var40
    var62 = var51 & var44 | arg36 - -1637711273
    result = var45 & ((((var52 & var55 | (var41 - (var54 & var44) | var44 + var51 - var62)) + var51) & var47) & var47)
    return result
def func6(arg23, arg24):
    var25 = arg23 | (-1695077952 ^ 21)
    if var25 < var25:
        var26 = -909985095 + var25 & (arg24 & var25)
    else:
        var26 = (-796 | 353) | 118 ^ arg23
    var27 = -375 ^ var25
    var28 = (arg23 & 1965847659 + var27) - arg23
    var29 = var25 | 1880805364 & arg23 & 243
    var30 = (arg23 + var25 ^ var29) ^ var27
    var31 = var27 ^ ((arg24 - var29) | var25)
    var32 = var31 - var27
    var33 = -89 ^ var30
    var34 = var27 & 1524244127
    result = (-1330182459 - -564 & arg23) | (var29 | var30 + var28 ^ var31 & (var32 | var27) | var27 ^ var34) + var27
    return result
def func5():
    closure = [4]
    def func4(arg20, arg21):
        closure[0] += func6(arg20, arg21)
        return closure[0]
    func = func4
    return func
var22 = func5()
def func2(arg3, arg4):
    var5 = 0
    for var18 in [(i | arg4 & 7 ^ (var5 + var5 & arg3 - i) | i & var5 | 8) + 9 + arg3 for i in func3(var5, arg4)]:
        var5 += var18 & 3
    return var5
def func3(arg6, arg7):
    var8 = arg6 + arg6 & -513 + arg7
    yield var8
    var9 = (208 - 1381058761 + arg7) & var8
    yield var9
    var10 = var8 + var9
    yield var10
    var11 = var8 - -363
    yield var11
    var12 = var11 - var10
    yield var12
    var13 = var11 ^ var9 + var11 - 351590905
    yield var13
    var14 = var10 - var12 ^ var13 & var10
    yield var14
    var15 = (arg7 + arg7) ^ var13 | arg7
    yield var15
    var16 = var14 | var13
    yield var16
    var17 = arg7 - var13
    yield var17
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 8'
    print 'arg_number: 69'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    var19 = func2(arg2, arg1)
    var35 = var22(arg1, arg2)
    var63 = func7(var35, var19)
    if var19 < var19:
        var64 = var63 - (var35 | var63)
    else:
        var64 = (arg2 - arg2) ^ 373154718 ^ var63
    var65 = (var35 & (-802 - 1702332472 - (((var19 & arg2) + (-667795138 | arg1) | var35) ^ var63 | (-2109749890 ^ -867) | var35 + var35 | 1811970148 ^ var19 + var35) - var63 ^ 598) & var35 & var35 ^ var63) & var35
    var66 = ((-120278249 + var63) & -1120713597 & (var65 | arg1)) - (var65 & (((var19 + -1536739687 & ((arg1 - arg1 & var19 + -656002773 | ((347519746 ^ 1904916977 & var65) | arg1)) ^ var35)) - var65) + 882 - var19) | arg1 - var63)
    var67 = var65 - var35 + (arg1 - var19) - -886 - (arg2 + var65 | ((arg1 & arg2) + (var63 - (var63 & var19 & (arg1 | (var66 ^ var66 & (arg2 | arg2 - arg1)) + var65))) ^ 1415574178 ^ var19) | var66)
    var68 = -214734368 ^ var66 & (var19 ^ var19)
    result = (arg2 ^ -922292055) + var35 + arg1 - -1423169681 ^ var65 & arg1
    return result
def func7(arg36, arg37):
    var38 = (arg36 + 865 & arg36) + -898
    var39 = 911806862 | -664020791
    var40 = (arg36 & var39 ^ arg36) ^ arg36
    var41 = 1740791013 | (arg36 | -489)
    if arg36 < var40:
        var42 = arg36 & arg36 ^ arg37
    else:
        var42 = (arg37 + (arg36 | var41)) & var38
    if var38 < var39:
        var43 = var38 - var41
    else:
        var43 = (-110178193 - arg36) & arg36
    var44 = var38 - arg36 + var41
    var45 = var41 + var38 + arg37
    var46 = (var39 | arg36) | var39
    var47 = -15860744 & (-574096205 | var45)
    var48 = (-800 | var44) ^ -519206715
    var49 = var46 | 38014069
    if var44 < var41:
        var50 = arg36 - var46 - var46 + var41
    else:
        var50 = var44 ^ var45
    var51 = var38 & arg36 | var45 - var47
    var52 = (var47 + var39) & arg37 - var48
    var53 = var45 - var49
    var54 = var53 + (var45 & var46 ^ var45)
    var55 = arg37 & -543 + arg36 & 478
    var56 = var54 & 87
    var57 = 2098740897 - var52 ^ -238 | var55
    var58 = ((var48 ^ var55) | var56) & var46
    if var40 < var41:
        var59 = arg36 | (var57 & var53)
    else:
        var59 = (var52 + var38 + var41) - var53
    var60 = var38 - var54 | var48
    var61 = arg36 - var40
    var62 = var51 & var44 | arg36 - -1637711273
    result = var45 & ((((var52 & var55 | (var41 - (var54 & var44) | var44 + var51 - var62)) + var51) & var47) & var47)
    return result
def func6(arg23, arg24):
    var25 = arg23 | (-1695077952 ^ 21)
    if var25 < var25:
        var26 = -909985095 + var25 & (arg24 & var25)
    else:
        var26 = (-796 | 353) | 118 ^ arg23
    var27 = -375 ^ var25
    var28 = (arg23 & 1965847659 + var27) - arg23
    var29 = var25 | 1880805364 & arg23 & 243
    var30 = (arg23 + var25 ^ var29) ^ var27
    var31 = var27 ^ ((arg24 - var29) | var25)
    var32 = var31 - var27
    var33 = -89 ^ var30
    var34 = var27 & 1524244127
    result = (-1330182459 - -564 & arg23) | (var29 | var30 + var28 ^ var31 & (var32 | var27) | var27 ^ var34) + var27
    return result
def func5():
    closure = [4]
    def func4(arg20, arg21):
        closure[0] += func6(arg20, arg21)
        return closure[0]
    func = func4
    return func
var22 = func5()
def func2(arg3, arg4):
    var5 = 0
    for var18 in [(i | arg4 & 7 ^ (var5 + var5 & arg3 - i) | i & var5 | 8) + 9 + arg3 for i in func3(var5, arg4)]:
        var5 += var18 & 3
    return var5
def func3(arg6, arg7):
    var8 = arg6 + arg6 & -513 + arg7
    yield var8
    var9 = (208 - 1381058761 + arg7) & var8
    yield var9
    var10 = var8 + var9
    yield var10
    var11 = var8 - -363
    yield var11
    var12 = var11 - var10
    yield var12
    var13 = var11 ^ var9 + var11 - 351590905
    yield var13
    var14 = var10 - var12 ^ var13 & var10
    yield var14
    var15 = (arg7 + arg7) ^ var13 | arg7
    yield var15
    var16 = var14 | var13
    yield var16
    var17 = arg7 - var13
    yield var17
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 8'
    print 'arg_number: 69'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    var19 = func2(arg2, arg1)
    var35 = var22(arg1, arg2)
    var63 = func7(var35, var19)
    if var19 < var19:
        var64 = var63 - (var35 | var63)
    else:
        var64 = (arg2 - arg2) ^ 373154718 ^ var63
    var65 = (var35 & (-802 - 1702332472 - (((var19 & arg2) + (-667795138 | arg1) | var35) ^ var63 | (-2109749890 ^ -867) | var35 + var35 | 1811970148 ^ var19 + var35) - var63 ^ 598) & var35 & var35 ^ var63) & var35
    var66 = ((-120278249 + var63) & -1120713597 & (var65 | arg1)) - (var65 & (((var19 + -1536739687 & ((arg1 - arg1 & var19 + -656002773 | ((347519746 ^ 1904916977 & var65) | arg1)) ^ var35)) - var65) + 882 - var19) | arg1 - var63)
    var67 = var65 - var35 + (arg1 - var19) - -886 - (arg2 + var65 | ((arg1 & arg2) + (var63 - (var63 & var19 & (arg1 | (var66 ^ var66 & (arg2 | arg2 - arg1)) + var65))) ^ 1415574178 ^ var19) | var66)
    var68 = -214734368 ^ var66 & (var19 ^ var19)
    result = (arg2 ^ -922292055) + var35 + arg1 - -1423169681 ^ var65 & arg1
    return result
def func7(arg36, arg37):
    var38 = (arg36 + 865 & arg36) + -898
    var39 = 911806862 | -664020791
    var40 = (arg36 & var39 ^ arg36) ^ arg36
    var41 = 1740791013 | (arg36 | -489)
    if arg36 < var40:
        var42 = arg36 & arg36 ^ arg37
    else:
        var42 = (arg37 + (arg36 | var41)) & var38
    if var38 < var39:
        var43 = var38 - var41
    else:
        var43 = (-110178193 - arg36) & arg36
    var44 = var38 - arg36 + var41
    var45 = var41 + var38 + arg37
    var46 = (var39 | arg36) | var39
    var47 = -15860744 & (-574096205 | var45)
    var48 = (-800 | var44) ^ -519206715
    var49 = var46 | 38014069
    if var44 < var41:
        var50 = arg36 - var46 - var46 + var41
    else:
        var50 = var44 ^ var45
    var51 = var38 & arg36 | var45 - var47
    var52 = (var47 + var39) & arg37 - var48
    var53 = var45 - var49
    var54 = var53 + (var45 & var46 ^ var45)
    var55 = arg37 & -543 + arg36 & 478
    var56 = var54 & 87
    var57 = 2098740897 - var52 ^ -238 | var55
    var58 = ((var48 ^ var55) | var56) & var46
    if var40 < var41:
        var59 = arg36 | (var57 & var53)
    else:
        var59 = (var52 + var38 + var41) - var53
    var60 = var38 - var54 | var48
    var61 = arg36 - var40
    var62 = var51 & var44 | arg36 - -1637711273
    result = var45 & ((((var52 & var55 | (var41 - (var54 & var44) | var44 + var51 - var62)) + var51) & var47) & var47)
    return result
def func6(arg23, arg24):
    var25 = arg23 | (-1695077952 ^ 21)
    if var25 < var25:
        var26 = -909985095 + var25 & (arg24 & var25)
    else:
        var26 = (-796 | 353) | 118 ^ arg23
    var27 = -375 ^ var25
    var28 = (arg23 & 1965847659 + var27) - arg23
    var29 = var25 | 1880805364 & arg23 & 243
    var30 = (arg23 + var25 ^ var29) ^ var27
    var31 = var27 ^ ((arg24 - var29) | var25)
    var32 = var31 - var27
    var33 = -89 ^ var30
    var34 = var27 & 1524244127
    result = (-1330182459 - -564 & arg23) | (var29 | var30 + var28 ^ var31 & (var32 | var27) | var27 ^ var34) + var27
    return result
def func5():
    closure = [4]
    def func4(arg20, arg21):
        closure[0] += func6(arg20, arg21)
        return closure[0]
    func = func4
    return func
var22 = func5()
def func2(arg3, arg4):
    var5 = 0
    for var18 in [(i | arg4 & 7 ^ (var5 + var5 & arg3 - i) | i & var5 | 8) + 9 + arg3 for i in func3(var5, arg4)]:
        var5 += var18 & 3
    return var5
def func3(arg6, arg7):
    var8 = arg6 + arg6 & -513 + arg7
    yield var8
    var9 = (208 - 1381058761 + arg7) & var8
    yield var9
    var10 = var8 + var9
    yield var10
    var11 = var8 - -363
    yield var11
    var12 = var11 - var10
    yield var12
    var13 = var11 ^ var9 + var11 - 351590905
    yield var13
    var14 = var10 - var12 ^ var13 & var10
    yield var14
    var15 = (arg7 + arg7) ^ var13 | arg7
    yield var15
    var16 = var14 | var13
    yield var16
    var17 = arg7 - var13
    yield var17
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 8'
    print 'arg_number: 69'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    var19 = func2(arg2, arg1)
    var35 = var22(arg1, arg2)
    var63 = func7(var35, var19)
    if var19 < var19:
        var64 = var63 - (var35 | var63)
    else:
        var64 = (arg2 - arg2) ^ 373154718 ^ var63
    var65 = (var35 & (-802 - 1702332472 - (((var19 & arg2) + (-667795138 | arg1) | var35) ^ var63 | (-2109749890 ^ -867) | var35 + var35 | 1811970148 ^ var19 + var35) - var63 ^ 598) & var35 & var35 ^ var63) & var35
    var66 = ((-120278249 + var63) & -1120713597 & (var65 | arg1)) - (var65 & (((var19 + -1536739687 & ((arg1 - arg1 & var19 + -656002773 | ((347519746 ^ 1904916977 & var65) | arg1)) ^ var35)) - var65) + 882 - var19) | arg1 - var63)
    var67 = var65 - var35 + (arg1 - var19) - -886 - (arg2 + var65 | ((arg1 & arg2) + (var63 - (var63 & var19 & (arg1 | (var66 ^ var66 & (arg2 | arg2 - arg1)) + var65))) ^ 1415574178 ^ var19) | var66)
    var68 = -214734368 ^ var66 & (var19 ^ var19)
    result = (arg2 ^ -922292055) + var35 + arg1 - -1423169681 ^ var65 & arg1
    return result
def func7(arg36, arg37):
    var38 = (arg36 + 865 & arg36) + -898
    var39 = 911806862 | -664020791
    var40 = (arg36 & var39 ^ arg36) ^ arg36
    var41 = 1740791013 | (arg36 | -489)
    if arg36 < var40:
        var42 = arg36 & arg36 ^ arg37
    else:
        var42 = (arg37 + (arg36 | var41)) & var38
    if var38 < var39:
        var43 = var38 - var41
    else:
        var43 = (-110178193 - arg36) & arg36
    var44 = var38 - arg36 + var41
    var45 = var41 + var38 + arg37
    var46 = (var39 | arg36) | var39
    var47 = -15860744 & (-574096205 | var45)
    var48 = (-800 | var44) ^ -519206715
    var49 = var46 | 38014069
    if var44 < var41:
        var50 = arg36 - var46 - var46 + var41
    else:
        var50 = var44 ^ var45
    var51 = var38 & arg36 | var45 - var47
    var52 = (var47 + var39) & arg37 - var48
    var53 = var45 - var49
    var54 = var53 + (var45 & var46 ^ var45)
    var55 = arg37 & -543 + arg36 & 478
    var56 = var54 & 87
    var57 = 2098740897 - var52 ^ -238 | var55
    var58 = ((var48 ^ var55) | var56) & var46
    if var40 < var41:
        var59 = arg36 | (var57 & var53)
    else:
        var59 = (var52 + var38 + var41) - var53
    var60 = var38 - var54 | var48
    var61 = arg36 - var40
    var62 = var51 & var44 | arg36 - -1637711273
    result = var45 & ((((var52 & var55 | (var41 - (var54 & var44) | var44 + var51 - var62)) + var51) & var47) & var47)
    return result
def func6(arg23, arg24):
    var25 = arg23 | (-1695077952 ^ 21)
    if var25 < var25:
        var26 = -909985095 + var25 & (arg24 & var25)
    else:
        var26 = (-796 | 353) | 118 ^ arg23
    var27 = -375 ^ var25
    var28 = (arg23 & 1965847659 + var27) - arg23
    var29 = var25 | 1880805364 & arg23 & 243
    var30 = (arg23 + var25 ^ var29) ^ var27
    var31 = var27 ^ ((arg24 - var29) | var25)
    var32 = var31 - var27
    var33 = -89 ^ var30
    var34 = var27 & 1524244127
    result = (-1330182459 - -564 & arg23) | (var29 | var30 + var28 ^ var31 & (var32 | var27) | var27 ^ var34) + var27
    return result
def func5():
    closure = [4]
    def func4(arg20, arg21):
        closure[0] += func6(arg20, arg21)
        return closure[0]
    func = func4
    return func
var22 = func5()
def func2(arg3, arg4):
    var5 = 0
    for var18 in [(i | arg4 & 7 ^ (var5 + var5 & arg3 - i) | i & var5 | 8) + 9 + arg3 for i in func3(var5, arg4)]:
        var5 += var18 & 3
    return var5
def func3(arg6, arg7):
    var8 = arg6 + arg6 & -513 + arg7
    yield var8
    var9 = (208 - 1381058761 + arg7) & var8
    yield var9
    var10 = var8 + var9
    yield var10
    var11 = var8 - -363
    yield var11
    var12 = var11 - var10
    yield var12
    var13 = var11 ^ var9 + var11 - 351590905
    yield var13
    var14 = var10 - var12 ^ var13 & var10
    yield var14
    var15 = (arg7 + arg7) ^ var13 | arg7
    yield var15
    var16 = var14 | var13
    yield var16
    var17 = arg7 - var13
    yield var17
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 8'
    print 'arg_number: 69'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    var19 = func2(arg2, arg1)
    var35 = var22(arg1, arg2)
    var63 = func7(var35, var19)
    if var19 < var19:
        var64 = var63 - (var35 | var63)
    else:
        var64 = (arg2 - arg2) ^ 373154718 ^ var63
    var65 = (var35 & (-802 - 1702332472 - (((var19 & arg2) + (-667795138 | arg1) | var35) ^ var63 | (-2109749890 ^ -867) | var35 + var35 | 1811970148 ^ var19 + var35) - var63 ^ 598) & var35 & var35 ^ var63) & var35
    var66 = ((-120278249 + var63) & -1120713597 & (var65 | arg1)) - (var65 & (((var19 + -1536739687 & ((arg1 - arg1 & var19 + -656002773 | ((347519746 ^ 1904916977 & var65) | arg1)) ^ var35)) - var65) + 882 - var19) | arg1 - var63)
    var67 = var65 - var35 + (arg1 - var19) - -886 - (arg2 + var65 | ((arg1 & arg2) + (var63 - (var63 & var19 & (arg1 | (var66 ^ var66 & (arg2 | arg2 - arg1)) + var65))) ^ 1415574178 ^ var19) | var66)
    var68 = -214734368 ^ var66 & (var19 ^ var19)
    result = (arg2 ^ -922292055) + var35 + arg1 - -1423169681 ^ var65 & arg1
    return result
def func7(arg36, arg37):
    var38 = (arg36 + 865 & arg36) + -898
    var39 = 911806862 | -664020791
    var40 = (arg36 & var39 ^ arg36) ^ arg36
    var41 = 1740791013 | (arg36 | -489)
    if arg36 < var40:
        var42 = arg36 & arg36 ^ arg37
    else:
        var42 = (arg37 + (arg36 | var41)) & var38
    if var38 < var39:
        var43 = var38 - var41
    else:
        var43 = (-110178193 - arg36) & arg36
    var44 = var38 - arg36 + var41
    var45 = var41 + var38 + arg37
    var46 = (var39 | arg36) | var39
    var47 = -15860744 & (-574096205 | var45)
    var48 = (-800 | var44) ^ -519206715
    var49 = var46 | 38014069
    if var44 < var41:
        var50 = arg36 - var46 - var46 + var41
    else:
        var50 = var44 ^ var45
    var51 = var38 & arg36 | var45 - var47
    var52 = (var47 + var39) & arg37 - var48
    var53 = var45 - var49
    var54 = var53 + (var45 & var46 ^ var45)
    var55 = arg37 & -543 + arg36 & 478
    var56 = var54 & 87
    var57 = 2098740897 - var52 ^ -238 | var55
    var58 = ((var48 ^ var55) | var56) & var46
    if var40 < var41:
        var59 = arg36 | (var57 & var53)
    else:
        var59 = (var52 + var38 + var41) - var53
    var60 = var38 - var54 | var48
    var61 = arg36 - var40
    var62 = var51 & var44 | arg36 - -1637711273
    result = var45 & ((((var52 & var55 | (var41 - (var54 & var44) | var44 + var51 - var62)) + var51) & var47) & var47)
    return result
def func6(arg23, arg24):
    var25 = arg23 | (-1695077952 ^ 21)
    if var25 < var25:
        var26 = -909985095 + var25 & (arg24 & var25)
    else:
        var26 = (-796 | 353) | 118 ^ arg23
    var27 = -375 ^ var25
    var28 = (arg23 & 1965847659 + var27) - arg23
    var29 = var25 | 1880805364 & arg23 & 243
    var30 = (arg23 + var25 ^ var29) ^ var27
    var31 = var27 ^ ((arg24 - var29) | var25)
    var32 = var31 - var27
    var33 = -89 ^ var30
    var34 = var27 & 1524244127
    result = (-1330182459 - -564 & arg23) | (var29 | var30 + var28 ^ var31 & (var32 | var27) | var27 ^ var34) + var27
    return result
def func5():
    closure = [4]
    def func4(arg20, arg21):
        closure[0] += func6(arg20, arg21)
        return closure[0]
    func = func4
    return func
var22 = func5()
def func2(arg3, arg4):
    var5 = 0
    for var18 in [(i | arg4 & 7 ^ (var5 + var5 & arg3 - i) | i & var5 | 8) + 9 + arg3 for i in func3(var5, arg4)]:
        var5 += var18 & 3
    return var5
def func3(arg6, arg7):
    var8 = arg6 + arg6 & -513 + arg7
    yield var8
    var9 = (208 - 1381058761 + arg7) & var8
    yield var9
    var10 = var8 + var9
    yield var10
    var11 = var8 - -363
    yield var11
    var12 = var11 - var10
    yield var12
    var13 = var11 ^ var9 + var11 - 351590905
    yield var13
    var14 = var10 - var12 ^ var13 & var10
    yield var14
    var15 = (arg7 + arg7) ^ var13 | arg7
    yield var15
    var16 = var14 | var13
    yield var16
    var17 = arg7 - var13
    yield var17
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 8'
    print 'arg_number: 69'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    var19 = func2(arg2, arg1)
    var35 = var22(arg1, arg2)
    var63 = func7(var35, var19)
    if var19 < var19:
        var64 = var63 - (var35 | var63)
    else:
        var64 = (arg2 - arg2) ^ 373154718 ^ var63
    var65 = (var35 & (-802 - 1702332472 - (((var19 & arg2) + (-667795138 | arg1) | var35) ^ var63 | (-2109749890 ^ -867) | var35 + var35 | 1811970148 ^ var19 + var35) - var63 ^ 598) & var35 & var35 ^ var63) & var35
    var66 = ((-120278249 + var63) & -1120713597 & (var65 | arg1)) - (var65 & (((var19 + -1536739687 & ((arg1 - arg1 & var19 + -656002773 | ((347519746 ^ 1904916977 & var65) | arg1)) ^ var35)) - var65) + 882 - var19) | arg1 - var63)
    var67 = var65 - var35 + (arg1 - var19) - -886 - (arg2 + var65 | ((arg1 & arg2) + (var63 - (var63 & var19 & (arg1 | (var66 ^ var66 & (arg2 | arg2 - arg1)) + var65))) ^ 1415574178 ^ var19) | var66)
    var68 = -214734368 ^ var66 & (var19 ^ var19)
    result = (arg2 ^ -922292055) + var35 + arg1 - -1423169681 ^ var65 & arg1
    return result
def func7(arg36, arg37):
    var38 = (arg36 + 865 & arg36) + -898
    var39 = 911806862 | -664020791
    var40 = (arg36 & var39 ^ arg36) ^ arg36
    var41 = 1740791013 | (arg36 | -489)
    if arg36 < var40:
        var42 = arg36 & arg36 ^ arg37
    else:
        var42 = (arg37 + (arg36 | var41)) & var38
    if var38 < var39:
        var43 = var38 - var41
    else:
        var43 = (-110178193 - arg36) & arg36
    var44 = var38 - arg36 + var41
    var45 = var41 + var38 + arg37
    var46 = (var39 | arg36) | var39
    var47 = -15860744 & (-574096205 | var45)
    var48 = (-800 | var44) ^ -519206715
    var49 = var46 | 38014069
    if var44 < var41:
        var50 = arg36 - var46 - var46 + var41
    else:
        var50 = var44 ^ var45
    var51 = var38 & arg36 | var45 - var47
    var52 = (var47 + var39) & arg37 - var48
    var53 = var45 - var49
    var54 = var53 + (var45 & var46 ^ var45)
    var55 = arg37 & -543 + arg36 & 478
    var56 = var54 & 87
    var57 = 2098740897 - var52 ^ -238 | var55
    var58 = ((var48 ^ var55) | var56) & var46
    if var40 < var41:
        var59 = arg36 | (var57 & var53)
    else:
        var59 = (var52 + var38 + var41) - var53
    var60 = var38 - var54 | var48
    var61 = arg36 - var40
    var62 = var51 & var44 | arg36 - -1637711273
    result = var45 & ((((var52 & var55 | (var41 - (var54 & var44) | var44 + var51 - var62)) + var51) & var47) & var47)
    return result
def func6(arg23, arg24):
    var25 = arg23 | (-1695077952 ^ 21)
    if var25 < var25:
        var26 = -909985095 + var25 & (arg24 & var25)
    else:
        var26 = (-796 | 353) | 118 ^ arg23
    var27 = -375 ^ var25
    var28 = (arg23 & 1965847659 + var27) - arg23
    var29 = var25 | 1880805364 & arg23 & 243
    var30 = (arg23 + var25 ^ var29) ^ var27
    var31 = var27 ^ ((arg24 - var29) | var25)
    var32 = var31 - var27
    var33 = -89 ^ var30
    var34 = var27 & 1524244127
    result = (-1330182459 - -564 & arg23) | (var29 | var30 + var28 ^ var31 & (var32 | var27) | var27 ^ var34) + var27
    return result
def func5():
    closure = [4]
    def func4(arg20, arg21):
        closure[0] += func6(arg20, arg21)
        return closure[0]
    func = func4
    return func
var22 = func5()
def func2(arg3, arg4):
    var5 = 0
    for var18 in [(i | arg4 & 7 ^ (var5 + var5 & arg3 - i) | i & var5 | 8) + 9 + arg3 for i in func3(var5, arg4)]:
        var5 += var18 & 3
    return var5
def func3(arg6, arg7):
    var8 = arg6 + arg6 & -513 + arg7
    yield var8
    var9 = (208 - 1381058761 + arg7) & var8
    yield var9
    var10 = var8 + var9
    yield var10
    var11 = var8 - -363
    yield var11
    var12 = var11 - var10
    yield var12
    var13 = var11 ^ var9 + var11 - 351590905
    yield var13
    var14 = var10 - var12 ^ var13 & var10
    yield var14
    var15 = (arg7 + arg7) ^ var13 | arg7
    yield var15
    var16 = var14 | var13
    yield var16
    var17 = arg7 - var13
    yield var17
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 8'
    print 'arg_number: 69'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    var19 = func2(arg2, arg1)
    var35 = var22(arg1, arg2)
    var63 = func7(var35, var19)
    if var19 < var19:
        var64 = var63 - (var35 | var63)
    else:
        var64 = (arg2 - arg2) ^ 373154718 ^ var63
    var65 = (var35 & (-802 - 1702332472 - (((var19 & arg2) + (-667795138 | arg1) | var35) ^ var63 | (-2109749890 ^ -867) | var35 + var35 | 1811970148 ^ var19 + var35) - var63 ^ 598) & var35 & var35 ^ var63) & var35
    var66 = ((-120278249 + var63) & -1120713597 & (var65 | arg1)) - (var65 & (((var19 + -1536739687 & ((arg1 - arg1 & var19 + -656002773 | ((347519746 ^ 1904916977 & var65) | arg1)) ^ var35)) - var65) + 882 - var19) | arg1 - var63)
    var67 = var65 - var35 + (arg1 - var19) - -886 - (arg2 + var65 | ((arg1 & arg2) + (var63 - (var63 & var19 & (arg1 | (var66 ^ var66 & (arg2 | arg2 - arg1)) + var65))) ^ 1415574178 ^ var19) | var66)
    var68 = -214734368 ^ var66 & (var19 ^ var19)
    result = (arg2 ^ -922292055) + var35 + arg1 - -1423169681 ^ var65 & arg1
    return result
def func7(arg36, arg37):
    var38 = (arg36 + 865 & arg36) + -898
    var39 = 911806862 | -664020791
    var40 = (arg36 & var39 ^ arg36) ^ arg36
    var41 = 1740791013 | (arg36 | -489)
    if arg36 < var40:
        var42 = arg36 & arg36 ^ arg37
    else:
        var42 = (arg37 + (arg36 | var41)) & var38
    if var38 < var39:
        var43 = var38 - var41
    else:
        var43 = (-110178193 - arg36) & arg36
    var44 = var38 - arg36 + var41
    var45 = var41 + var38 + arg37
    var46 = (var39 | arg36) | var39
    var47 = -15860744 & (-574096205 | var45)
    var48 = (-800 | var44) ^ -519206715
    var49 = var46 | 38014069
    if var44 < var41:
        var50 = arg36 - var46 - var46 + var41
    else:
        var50 = var44 ^ var45
    var51 = var38 & arg36 | var45 - var47
    var52 = (var47 + var39) & arg37 - var48
    var53 = var45 - var49
    var54 = var53 + (var45 & var46 ^ var45)
    var55 = arg37 & -543 + arg36 & 478
    var56 = var54 & 87
    var57 = 2098740897 - var52 ^ -238 | var55
    var58 = ((var48 ^ var55) | var56) & var46
    if var40 < var41:
        var59 = arg36 | (var57 & var53)
    else:
        var59 = (var52 + var38 + var41) - var53
    var60 = var38 - var54 | var48
    var61 = arg36 - var40
    var62 = var51 & var44 | arg36 - -1637711273
    result = var45 & ((((var52 & var55 | (var41 - (var54 & var44) | var44 + var51 - var62)) + var51) & var47) & var47)
    return result
def func6(arg23, arg24):
    var25 = arg23 | (-1695077952 ^ 21)
    if var25 < var25:
        var26 = -909985095 + var25 & (arg24 & var25)
    else:
        var26 = (-796 | 353) | 118 ^ arg23
    var27 = -375 ^ var25
    var28 = (arg23 & 1965847659 + var27) - arg23
    var29 = var25 | 1880805364 & arg23 & 243
    var30 = (arg23 + var25 ^ var29) ^ var27
    var31 = var27 ^ ((arg24 - var29) | var25)
    var32 = var31 - var27
    var33 = -89 ^ var30
    var34 = var27 & 1524244127
    result = (-1330182459 - -564 & arg23) | (var29 | var30 + var28 ^ var31 & (var32 | var27) | var27 ^ var34) + var27
    return result
def func5():
    closure = [4]
    def func4(arg20, arg21):
        closure[0] += func6(arg20, arg21)
        return closure[0]
    func = func4
    return func
var22 = func5()
def func2(arg3, arg4):
    var5 = 0
    for var18 in [(i | arg4 & 7 ^ (var5 + var5 & arg3 - i) | i & var5 | 8) + 9 + arg3 for i in func3(var5, arg4)]:
        var5 += var18 & 3
    return var5
def func3(arg6, arg7):
    var8 = arg6 + arg6 & -513 + arg7
    yield var8
    var9 = (208 - 1381058761 + arg7) & var8
    yield var9
    var10 = var8 + var9
    yield var10
    var11 = var8 - -363
    yield var11
    var12 = var11 - var10
    yield var12
    var13 = var11 ^ var9 + var11 - 351590905
    yield var13
    var14 = var10 - var12 ^ var13 & var10
    yield var14
    var15 = (arg7 + arg7) ^ var13 | arg7
    yield var15
    var16 = var14 | var13
    yield var16
    var17 = arg7 - var13
    yield var17
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 8'
    print 'arg_number: 69'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    var19 = func2(arg2, arg1)
    var35 = var22(arg1, arg2)
    var63 = func7(var35, var19)
    if var19 < var19:
        var64 = var63 - (var35 | var63)
    else:
        var64 = (arg2 - arg2) ^ 373154718 ^ var63
    var65 = (var35 & (-802 - 1702332472 - (((var19 & arg2) + (-667795138 | arg1) | var35) ^ var63 | (-2109749890 ^ -867) | var35 + var35 | 1811970148 ^ var19 + var35) - var63 ^ 598) & var35 & var35 ^ var63) & var35
    var66 = ((-120278249 + var63) & -1120713597 & (var65 | arg1)) - (var65 & (((var19 + -1536739687 & ((arg1 - arg1 & var19 + -656002773 | ((347519746 ^ 1904916977 & var65) | arg1)) ^ var35)) - var65) + 882 - var19) | arg1 - var63)
    var67 = var65 - var35 + (arg1 - var19) - -886 - (arg2 + var65 | ((arg1 & arg2) + (var63 - (var63 & var19 & (arg1 | (var66 ^ var66 & (arg2 | arg2 - arg1)) + var65))) ^ 1415574178 ^ var19) | var66)
    var68 = -214734368 ^ var66 & (var19 ^ var19)
    result = (arg2 ^ -922292055) + var35 + arg1 - -1423169681 ^ var65 & arg1
    return result
def func7(arg36, arg37):
    var38 = (arg36 + 865 & arg36) + -898
    var39 = 911806862 | -664020791
    var40 = (arg36 & var39 ^ arg36) ^ arg36
    var41 = 1740791013 | (arg36 | -489)
    if arg36 < var40:
        var42 = arg36 & arg36 ^ arg37
    else:
        var42 = (arg37 + (arg36 | var41)) & var38
    if var38 < var39:
        var43 = var38 - var41
    else:
        var43 = (-110178193 - arg36) & arg36
    var44 = var38 - arg36 + var41
    var45 = var41 + var38 + arg37
    var46 = (var39 | arg36) | var39
    var47 = -15860744 & (-574096205 | var45)
    var48 = (-800 | var44) ^ -519206715
    var49 = var46 | 38014069
    if var44 < var41:
        var50 = arg36 - var46 - var46 + var41
    else:
        var50 = var44 ^ var45
    var51 = var38 & arg36 | var45 - var47
    var52 = (var47 + var39) & arg37 - var48
    var53 = var45 - var49
    var54 = var53 + (var45 & var46 ^ var45)
    var55 = arg37 & -543 + arg36 & 478
    var56 = var54 & 87
    var57 = 2098740897 - var52 ^ -238 | var55
    var58 = ((var48 ^ var55) | var56) & var46
    if var40 < var41:
        var59 = arg36 | (var57 & var53)
    else:
        var59 = (var52 + var38 + var41) - var53
    var60 = var38 - var54 | var48
    var61 = arg36 - var40
    var62 = var51 & var44 | arg36 - -1637711273
    result = var45 & ((((var52 & var55 | (var41 - (var54 & var44) | var44 + var51 - var62)) + var51) & var47) & var47)
    return result
def func6(arg23, arg24):
    var25 = arg23 | (-1695077952 ^ 21)
    if var25 < var25:
        var26 = -909985095 + var25 & (arg24 & var25)
    else:
        var26 = (-796 | 353) | 118 ^ arg23
    var27 = -375 ^ var25
    var28 = (arg23 & 1965847659 + var27) - arg23
    var29 = var25 | 1880805364 & arg23 & 243
    var30 = (arg23 + var25 ^ var29) ^ var27
    var31 = var27 ^ ((arg24 - var29) | var25)
    var32 = var31 - var27
    var33 = -89 ^ var30
    var34 = var27 & 1524244127
    result = (-1330182459 - -564 & arg23) | (var29 | var30 + var28 ^ var31 & (var32 | var27) | var27 ^ var34) + var27
    return result
def func5():
    closure = [4]
    def func4(arg20, arg21):
        closure[0] += func6(arg20, arg21)
        return closure[0]
    func = func4
    return func
var22 = func5()
def func2(arg3, arg4):
    var5 = 0
    for var18 in [(i | arg4 & 7 ^ (var5 + var5 & arg3 - i) | i & var5 | 8) + 9 + arg3 for i in func3(var5, arg4)]:
        var5 += var18 & 3
    return var5
def func3(arg6, arg7):
    var8 = arg6 + arg6 & -513 + arg7
    yield var8
    var9 = (208 - 1381058761 + arg7) & var8
    yield var9
    var10 = var8 + var9
    yield var10
    var11 = var8 - -363
    yield var11
    var12 = var11 - var10
    yield var12
    var13 = var11 ^ var9 + var11 - 351590905
    yield var13
    var14 = var10 - var12 ^ var13 & var10
    yield var14
    var15 = (arg7 + arg7) ^ var13 | arg7
    yield var15
    var16 = var14 | var13
    yield var16
    var17 = arg7 - var13
    yield var17
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 8'
    print 'arg_number: 69'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    var19 = func2(arg2, arg1)
    var35 = var22(arg1, arg2)
    var63 = func7(var35, var19)
    if var19 < var19:
        var64 = var63 - (var35 | var63)
    else:
        var64 = (arg2 - arg2) ^ 373154718 ^ var63
    var65 = (var35 & (-802 - 1702332472 - (((var19 & arg2) + (-667795138 | arg1) | var35) ^ var63 | (-2109749890 ^ -867) | var35 + var35 | 1811970148 ^ var19 + var35) - var63 ^ 598) & var35 & var35 ^ var63) & var35
    var66 = ((-120278249 + var63) & -1120713597 & (var65 | arg1)) - (var65 & (((var19 + -1536739687 & ((arg1 - arg1 & var19 + -656002773 | ((347519746 ^ 1904916977 & var65) | arg1)) ^ var35)) - var65) + 882 - var19) | arg1 - var63)
    var67 = var65 - var35 + (arg1 - var19) - -886 - (arg2 + var65 | ((arg1 & arg2) + (var63 - (var63 & var19 & (arg1 | (var66 ^ var66 & (arg2 | arg2 - arg1)) + var65))) ^ 1415574178 ^ var19) | var66)
    var68 = -214734368 ^ var66 & (var19 ^ var19)
    result = (arg2 ^ -922292055) + var35 + arg1 - -1423169681 ^ var65 & arg1
    return result
def func7(arg36, arg37):
    var38 = (arg36 + 865 & arg36) + -898
    var39 = 911806862 | -664020791
    var40 = (arg36 & var39 ^ arg36) ^ arg36
    var41 = 1740791013 | (arg36 | -489)
    if arg36 < var40:
        var42 = arg36 & arg36 ^ arg37
    else:
        var42 = (arg37 + (arg36 | var41)) & var38
    if var38 < var39:
        var43 = var38 - var41
    else:
        var43 = (-110178193 - arg36) & arg36
    var44 = var38 - arg36 + var41
    var45 = var41 + var38 + arg37
    var46 = (var39 | arg36) | var39
    var47 = -15860744 & (-574096205 | var45)
    var48 = (-800 | var44) ^ -519206715
    var49 = var46 | 38014069
    if var44 < var41:
        var50 = arg36 - var46 - var46 + var41
    else:
        var50 = var44 ^ var45
    var51 = var38 & arg36 | var45 - var47
    var52 = (var47 + var39) & arg37 - var48
    var53 = var45 - var49
    var54 = var53 + (var45 & var46 ^ var45)
    var55 = arg37 & -543 + arg36 & 478
    var56 = var54 & 87
    var57 = 2098740897 - var52 ^ -238 | var55
    var58 = ((var48 ^ var55) | var56) & var46
    if var40 < var41:
        var59 = arg36 | (var57 & var53)
    else:
        var59 = (var52 + var38 + var41) - var53
    var60 = var38 - var54 | var48
    var61 = arg36 - var40
    var62 = var51 & var44 | arg36 - -1637711273
    result = var45 & ((((var52 & var55 | (var41 - (var54 & var44) | var44 + var51 - var62)) + var51) & var47) & var47)
    return result
def func6(arg23, arg24):
    var25 = arg23 | (-1695077952 ^ 21)
    if var25 < var25:
        var26 = -909985095 + var25 & (arg24 & var25)
    else:
        var26 = (-796 | 353) | 118 ^ arg23
    var27 = -375 ^ var25
    var28 = (arg23 & 1965847659 + var27) - arg23
    var29 = var25 | 1880805364 & arg23 & 243
    var30 = (arg23 + var25 ^ var29) ^ var27
    var31 = var27 ^ ((arg24 - var29) | var25)
    var32 = var31 - var27
    var33 = -89 ^ var30
    var34 = var27 & 1524244127
    result = (-1330182459 - -564 & arg23) | (var29 | var30 + var28 ^ var31 & (var32 | var27) | var27 ^ var34) + var27
    return result
def func5():
    closure = [4]
    def func4(arg20, arg21):
        closure[0] += func6(arg20, arg21)
        return closure[0]
    func = func4
    return func
var22 = func5()
def func2(arg3, arg4):
    var5 = 0
    for var18 in [(i | arg4 & 7 ^ (var5 + var5 & arg3 - i) | i & var5 | 8) + 9 + arg3 for i in func3(var5, arg4)]:
        var5 += var18 & 3
    return var5
def func3(arg6, arg7):
    var8 = arg6 + arg6 & -513 + arg7
    yield var8
    var9 = (208 - 1381058761 + arg7) & var8
    yield var9
    var10 = var8 + var9
    yield var10
    var11 = var8 - -363
    yield var11
    var12 = var11 - var10
    yield var12
    var13 = var11 ^ var9 + var11 - 351590905
    yield var13
    var14 = var10 - var12 ^ var13 & var10
    yield var14
    var15 = (arg7 + arg7) ^ var13 | arg7
    yield var15
    var16 = var14 | var13
    yield var16
    var17 = arg7 - var13
    yield var17
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 8'
    print 'arg_number: 69'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    var19 = func2(arg2, arg1)
    var35 = var22(arg1, arg2)
    var63 = func7(var35, var19)
    if var19 < var19:
        var64 = var63 - (var35 | var63)
    else:
        var64 = (arg2 - arg2) ^ 373154718 ^ var63
    var65 = (var35 & (-802 - 1702332472 - (((var19 & arg2) + (-667795138 | arg1) | var35) ^ var63 | (-2109749890 ^ -867) | var35 + var35 | 1811970148 ^ var19 + var35) - var63 ^ 598) & var35 & var35 ^ var63) & var35
    var66 = ((-120278249 + var63) & -1120713597 & (var65 | arg1)) - (var65 & (((var19 + -1536739687 & ((arg1 - arg1 & var19 + -656002773 | ((347519746 ^ 1904916977 & var65) | arg1)) ^ var35)) - var65) + 882 - var19) | arg1 - var63)
    var67 = var65 - var35 + (arg1 - var19) - -886 - (arg2 + var65 | ((arg1 & arg2) + (var63 - (var63 & var19 & (arg1 | (var66 ^ var66 & (arg2 | arg2 - arg1)) + var65))) ^ 1415574178 ^ var19) | var66)
    var68 = -214734368 ^ var66 & (var19 ^ var19)
    result = (arg2 ^ -922292055) + var35 + arg1 - -1423169681 ^ var65 & arg1
    return result
def func7(arg36, arg37):
    var38 = (arg36 + 865 & arg36) + -898
    var39 = 911806862 | -664020791
    var40 = (arg36 & var39 ^ arg36) ^ arg36
    var41 = 1740791013 | (arg36 | -489)
    if arg36 < var40:
        var42 = arg36 & arg36 ^ arg37
    else:
        var42 = (arg37 + (arg36 | var41)) & var38
    if var38 < var39:
        var43 = var38 - var41
    else:
        var43 = (-110178193 - arg36) & arg36
    var44 = var38 - arg36 + var41
    var45 = var41 + var38 + arg37
    var46 = (var39 | arg36) | var39
    var47 = -15860744 & (-574096205 | var45)
    var48 = (-800 | var44) ^ -519206715
    var49 = var46 | 38014069
    if var44 < var41:
        var50 = arg36 - var46 - var46 + var41
    else:
        var50 = var44 ^ var45
    var51 = var38 & arg36 | var45 - var47
    var52 = (var47 + var39) & arg37 - var48
    var53 = var45 - var49
    var54 = var53 + (var45 & var46 ^ var45)
    var55 = arg37 & -543 + arg36 & 478
    var56 = var54 & 87
    var57 = 2098740897 - var52 ^ -238 | var55
    var58 = ((var48 ^ var55) | var56) & var46
    if var40 < var41:
        var59 = arg36 | (var57 & var53)
    else:
        var59 = (var52 + var38 + var41) - var53
    var60 = var38 - var54 | var48
    var61 = arg36 - var40
    var62 = var51 & var44 | arg36 - -1637711273
    result = var45 & ((((var52 & var55 | (var41 - (var54 & var44) | var44 + var51 - var62)) + var51) & var47) & var47)
    return result
def func6(arg23, arg24):
    var25 = arg23 | (-1695077952 ^ 21)
    if var25 < var25:
        var26 = -909985095 + var25 & (arg24 & var25)
    else:
        var26 = (-796 | 353) | 118 ^ arg23
    var27 = -375 ^ var25
    var28 = (arg23 & 1965847659 + var27) - arg23
    var29 = var25 | 1880805364 & arg23 & 243
    var30 = (arg23 + var25 ^ var29) ^ var27
    var31 = var27 ^ ((arg24 - var29) | var25)
    var32 = var31 - var27
    var33 = -89 ^ var30
    var34 = var27 & 1524244127
    result = (-1330182459 - -564 & arg23) | (var29 | var30 + var28 ^ var31 & (var32 | var27) | var27 ^ var34) + var27
    return result
def func5():
    closure = [4]
    def func4(arg20, arg21):
        closure[0] += func6(arg20, arg21)
        return closure[0]
    func = func4
    return func
var22 = func5()
def func2(arg3, arg4):
    var5 = 0
    for var18 in [(i | arg4 & 7 ^ (var5 + var5 & arg3 - i) | i & var5 | 8) + 9 + arg3 for i in func3(var5, arg4)]:
        var5 += var18 & 3
    return var5
def func3(arg6, arg7):
    var8 = arg6 + arg6 & -513 + arg7
    yield var8
    var9 = (208 - 1381058761 + arg7) & var8
    yield var9
    var10 = var8 + var9
    yield var10
    var11 = var8 - -363
    yield var11
    var12 = var11 - var10
    yield var12
    var13 = var11 ^ var9 + var11 - 351590905
    yield var13
    var14 = var10 - var12 ^ var13 & var10
    yield var14
    var15 = (arg7 + arg7) ^ var13 | arg7
    yield var15
    var16 = var14 | var13
    yield var16
    var17 = arg7 - var13
    yield var17
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 8'
    print 'arg_number: 69'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    var19 = func2(arg2, arg1)
    var35 = var22(arg1, arg2)
    var63 = func7(var35, var19)
    if var19 < var19:
        var64 = var63 - (var35 | var63)
    else:
        var64 = (arg2 - arg2) ^ 373154718 ^ var63
    var65 = (var35 & (-802 - 1702332472 - (((var19 & arg2) + (-667795138 | arg1) | var35) ^ var63 | (-2109749890 ^ -867) | var35 + var35 | 1811970148 ^ var19 + var35) - var63 ^ 598) & var35 & var35 ^ var63) & var35
    var66 = ((-120278249 + var63) & -1120713597 & (var65 | arg1)) - (var65 & (((var19 + -1536739687 & ((arg1 - arg1 & var19 + -656002773 | ((347519746 ^ 1904916977 & var65) | arg1)) ^ var35)) - var65) + 882 - var19) | arg1 - var63)
    var67 = var65 - var35 + (arg1 - var19) - -886 - (arg2 + var65 | ((arg1 & arg2) + (var63 - (var63 & var19 & (arg1 | (var66 ^ var66 & (arg2 | arg2 - arg1)) + var65))) ^ 1415574178 ^ var19) | var66)
    var68 = -214734368 ^ var66 & (var19 ^ var19)
    result = (arg2 ^ -922292055) + var35 + arg1 - -1423169681 ^ var65 & arg1
    return result
def func7(arg36, arg37):
    var38 = (arg36 + 865 & arg36) + -898
    var39 = 911806862 | -664020791
    var40 = (arg36 & var39 ^ arg36) ^ arg36
    var41 = 1740791013 | (arg36 | -489)
    if arg36 < var40:
        var42 = arg36 & arg36 ^ arg37
    else:
        var42 = (arg37 + (arg36 | var41)) & var38
    if var38 < var39:
        var43 = var38 - var41
    else:
        var43 = (-110178193 - arg36) & arg36
    var44 = var38 - arg36 + var41
    var45 = var41 + var38 + arg37
    var46 = (var39 | arg36) | var39
    var47 = -15860744 & (-574096205 | var45)
    var48 = (-800 | var44) ^ -519206715
    var49 = var46 | 38014069
    if var44 < var41:
        var50 = arg36 - var46 - var46 + var41
    else:
        var50 = var44 ^ var45
    var51 = var38 & arg36 | var45 - var47
    var52 = (var47 + var39) & arg37 - var48
    var53 = var45 - var49
    var54 = var53 + (var45 & var46 ^ var45)
    var55 = arg37 & -543 + arg36 & 478
    var56 = var54 & 87
    var57 = 2098740897 - var52 ^ -238 | var55
    var58 = ((var48 ^ var55) | var56) & var46
    if var40 < var41:
        var59 = arg36 | (var57 & var53)
    else:
        var59 = (var52 + var38 + var41) - var53
    var60 = var38 - var54 | var48
    var61 = arg36 - var40
    var62 = var51 & var44 | arg36 - -1637711273
    result = var45 & ((((var52 & var55 | (var41 - (var54 & var44) | var44 + var51 - var62)) + var51) & var47) & var47)
    return result
def func6(arg23, arg24):
    var25 = arg23 | (-1695077952 ^ 21)
    if var25 < var25:
        var26 = -909985095 + var25 & (arg24 & var25)
    else:
        var26 = (-796 | 353) | 118 ^ arg23
    var27 = -375 ^ var25
    var28 = (arg23 & 1965847659 + var27) - arg23
    var29 = var25 | 1880805364 & arg23 & 243
    var30 = (arg23 + var25 ^ var29) ^ var27
    var31 = var27 ^ ((arg24 - var29) | var25)
    var32 = var31 - var27
    var33 = -89 ^ var30
    var34 = var27 & 1524244127
    result = (-1330182459 - -564 & arg23) | (var29 | var30 + var28 ^ var31 & (var32 | var27) | var27 ^ var34) + var27
    return result
def func5():
    closure = [4]
    def func4(arg20, arg21):
        closure[0] += func6(arg20, arg21)
        return closure[0]
    func = func4
    return func
var22 = func5()
def func2(arg3, arg4):
    var5 = 0
    for var18 in [(i | arg4 & 7 ^ (var5 + var5 & arg3 - i) | i & var5 | 8) + 9 + arg3 for i in func3(var5, arg4)]:
        var5 += var18 & 3
    return var5
def func3(arg6, arg7):
    var8 = arg6 + arg6 & -513 + arg7
    yield var8
    var9 = (208 - 1381058761 + arg7) & var8
    yield var9
    var10 = var8 + var9
    yield var10
    var11 = var8 - -363
    yield var11
    var12 = var11 - var10
    yield var12
    var13 = var11 ^ var9 + var11 - 351590905
    yield var13
    var14 = var10 - var12 ^ var13 & var10
    yield var14
    var15 = (arg7 + arg7) ^ var13 | arg7
    yield var15
    var16 = var14 | var13
    yield var16
    var17 = arg7 - var13
    yield var17
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 8'
    print 'arg_number: 69'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    var19 = func2(arg2, arg1)
    var35 = var22(arg1, arg2)
    var63 = func7(var35, var19)
    if var19 < var19:
        var64 = var63 - (var35 | var63)
    else:
        var64 = (arg2 - arg2) ^ 373154718 ^ var63
    var65 = (var35 & (-802 - 1702332472 - (((var19 & arg2) + (-667795138 | arg1) | var35) ^ var63 | (-2109749890 ^ -867) | var35 + var35 | 1811970148 ^ var19 + var35) - var63 ^ 598) & var35 & var35 ^ var63) & var35
    var66 = ((-120278249 + var63) & -1120713597 & (var65 | arg1)) - (var65 & (((var19 + -1536739687 & ((arg1 - arg1 & var19 + -656002773 | ((347519746 ^ 1904916977 & var65) | arg1)) ^ var35)) - var65) + 882 - var19) | arg1 - var63)
    var67 = var65 - var35 + (arg1 - var19) - -886 - (arg2 + var65 | ((arg1 & arg2) + (var63 - (var63 & var19 & (arg1 | (var66 ^ var66 & (arg2 | arg2 - arg1)) + var65))) ^ 1415574178 ^ var19) | var66)
    var68 = -214734368 ^ var66 & (var19 ^ var19)
    result = (arg2 ^ -922292055) + var35 + arg1 - -1423169681 ^ var65 & arg1
    return result
def func7(arg36, arg37):
    var38 = (arg36 + 865 & arg36) + -898
    var39 = 911806862 | -664020791
    var40 = (arg36 & var39 ^ arg36) ^ arg36
    var41 = 1740791013 | (arg36 | -489)
    if arg36 < var40:
        var42 = arg36 & arg36 ^ arg37
    else:
        var42 = (arg37 + (arg36 | var41)) & var38
    if var38 < var39:
        var43 = var38 - var41
    else:
        var43 = (-110178193 - arg36) & arg36
    var44 = var38 - arg36 + var41
    var45 = var41 + var38 + arg37
    var46 = (var39 | arg36) | var39
    var47 = -15860744 & (-574096205 | var45)
    var48 = (-800 | var44) ^ -519206715
    var49 = var46 | 38014069
    if var44 < var41:
        var50 = arg36 - var46 - var46 + var41
    else:
        var50 = var44 ^ var45
    var51 = var38 & arg36 | var45 - var47
    var52 = (var47 + var39) & arg37 - var48
    var53 = var45 - var49
    var54 = var53 + (var45 & var46 ^ var45)
    var55 = arg37 & -543 + arg36 & 478
    var56 = var54 & 87
    var57 = 2098740897 - var52 ^ -238 | var55
    var58 = ((var48 ^ var55) | var56) & var46
    if var40 < var41:
        var59 = arg36 | (var57 & var53)
    else:
        var59 = (var52 + var38 + var41) - var53
    var60 = var38 - var54 | var48
    var61 = arg36 - var40
    var62 = var51 & var44 | arg36 - -1637711273
    result = var45 & ((((var52 & var55 | (var41 - (var54 & var44) | var44 + var51 - var62)) + var51) & var47) & var47)
    return result
def func6(arg23, arg24):
    var25 = arg23 | (-1695077952 ^ 21)
    if var25 < var25:
        var26 = -909985095 + var25 & (arg24 & var25)
    else:
        var26 = (-796 | 353) | 118 ^ arg23
    var27 = -375 ^ var25
    var28 = (arg23 & 1965847659 + var27) - arg23
    var29 = var25 | 1880805364 & arg23 & 243
    var30 = (arg23 + var25 ^ var29) ^ var27
    var31 = var27 ^ ((arg24 - var29) | var25)
    var32 = var31 - var27
    var33 = -89 ^ var30
    var34 = var27 & 1524244127
    result = (-1330182459 - -564 & arg23) | (var29 | var30 + var28 ^ var31 & (var32 | var27) | var27 ^ var34) + var27
    return result
def func5():
    closure = [4]
    def func4(arg20, arg21):
        closure[0] += func6(arg20, arg21)
        return closure[0]
    func = func4
    return func
var22 = func5()
def func2(arg3, arg4):
    var5 = 0
    for var18 in [(i | arg4 & 7 ^ (var5 + var5 & arg3 - i) | i & var5 | 8) + 9 + arg3 for i in func3(var5, arg4)]:
        var5 += var18 & 3
    return var5
def func3(arg6, arg7):
    var8 = arg6 + arg6 & -513 + arg7
    yield var8
    var9 = (208 - 1381058761 + arg7) & var8
    yield var9
    var10 = var8 + var9
    yield var10
    var11 = var8 - -363
    yield var11
    var12 = var11 - var10
    yield var12
    var13 = var11 ^ var9 + var11 - 351590905
    yield var13
    var14 = var10 - var12 ^ var13 & var10
    yield var14
    var15 = (arg7 + arg7) ^ var13 | arg7
    yield var15
    var16 = var14 | var13
    yield var16
    var17 = arg7 - var13
    yield var17
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 8'
    print 'arg_number: 69'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    var19 = func2(arg2, arg1)
    var35 = var22(arg1, arg2)
    var63 = func7(var35, var19)
    if var19 < var19:
        var64 = var63 - (var35 | var63)
    else:
        var64 = (arg2 - arg2) ^ 373154718 ^ var63
    var65 = (var35 & (-802 - 1702332472 - (((var19 & arg2) + (-667795138 | arg1) | var35) ^ var63 | (-2109749890 ^ -867) | var35 + var35 | 1811970148 ^ var19 + var35) - var63 ^ 598) & var35 & var35 ^ var63) & var35
    var66 = ((-120278249 + var63) & -1120713597 & (var65 | arg1)) - (var65 & (((var19 + -1536739687 & ((arg1 - arg1 & var19 + -656002773 | ((347519746 ^ 1904916977 & var65) | arg1)) ^ var35)) - var65) + 882 - var19) | arg1 - var63)
    var67 = var65 - var35 + (arg1 - var19) - -886 - (arg2 + var65 | ((arg1 & arg2) + (var63 - (var63 & var19 & (arg1 | (var66 ^ var66 & (arg2 | arg2 - arg1)) + var65))) ^ 1415574178 ^ var19) | var66)
    var68 = -214734368 ^ var66 & (var19 ^ var19)
    result = (arg2 ^ -922292055) + var35 + arg1 - -1423169681 ^ var65 & arg1
    return result
def func7(arg36, arg37):
    var38 = (arg36 + 865 & arg36) + -898
    var39 = 911806862 | -664020791
    var40 = (arg36 & var39 ^ arg36) ^ arg36
    var41 = 1740791013 | (arg36 | -489)
    if arg36 < var40:
        var42 = arg36 & arg36 ^ arg37
    else:
        var42 = (arg37 + (arg36 | var41)) & var38
    if var38 < var39:
        var43 = var38 - var41
    else:
        var43 = (-110178193 - arg36) & arg36
    var44 = var38 - arg36 + var41
    var45 = var41 + var38 + arg37
    var46 = (var39 | arg36) | var39
    var47 = -15860744 & (-574096205 | var45)
    var48 = (-800 | var44) ^ -519206715
    var49 = var46 | 38014069
    if var44 < var41:
        var50 = arg36 - var46 - var46 + var41
    else:
        var50 = var44 ^ var45
    var51 = var38 & arg36 | var45 - var47
    var52 = (var47 + var39) & arg37 - var48
    var53 = var45 - var49
    var54 = var53 + (var45 & var46 ^ var45)
    var55 = arg37 & -543 + arg36 & 478
    var56 = var54 & 87
    var57 = 2098740897 - var52 ^ -238 | var55
    var58 = ((var48 ^ var55) | var56) & var46
    if var40 < var41:
        var59 = arg36 | (var57 & var53)
    else:
        var59 = (var52 + var38 + var41) - var53
    var60 = var38 - var54 | var48
    var61 = arg36 - var40
    var62 = var51 & var44 | arg36 - -1637711273
    result = var45 & ((((var52 & var55 | (var41 - (var54 & var44) | var44 + var51 - var62)) + var51) & var47) & var47)
    return result
def func6(arg23, arg24):
    var25 = arg23 | (-1695077952 ^ 21)
    if var25 < var25:
        var26 = -909985095 + var25 & (arg24 & var25)
    else:
        var26 = (-796 | 353) | 118 ^ arg23
    var27 = -375 ^ var25
    var28 = (arg23 & 1965847659 + var27) - arg23
    var29 = var25 | 1880805364 & arg23 & 243
    var30 = (arg23 + var25 ^ var29) ^ var27
    var31 = var27 ^ ((arg24 - var29) | var25)
    var32 = var31 - var27
    var33 = -89 ^ var30
    var34 = var27 & 1524244127
    result = (-1330182459 - -564 & arg23) | (var29 | var30 + var28 ^ var31 & (var32 | var27) | var27 ^ var34) + var27
    return result
def func5():
    closure = [4]
    def func4(arg20, arg21):
        closure[0] += func6(arg20, arg21)
        return closure[0]
    func = func4
    return func
var22 = func5()
def func2(arg3, arg4):
    var5 = 0
    for var18 in [(i | arg4 & 7 ^ (var5 + var5 & arg3 - i) | i & var5 | 8) + 9 + arg3 for i in func3(var5, arg4)]:
        var5 += var18 & 3
    return var5
def func3(arg6, arg7):
    var8 = arg6 + arg6 & -513 + arg7
    yield var8
    var9 = (208 - 1381058761 + arg7) & var8
    yield var9
    var10 = var8 + var9
    yield var10
    var11 = var8 - -363
    yield var11
    var12 = var11 - var10
    yield var12
    var13 = var11 ^ var9 + var11 - 351590905
    yield var13
    var14 = var10 - var12 ^ var13 & var10
    yield var14
    var15 = (arg7 + arg7) ^ var13 | arg7
    yield var15
    var16 = var14 | var13
    yield var16
    var17 = arg7 - var13
    yield var17
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 8'
    print 'arg_number: 69'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    var19 = func2(arg2, arg1)
    var35 = var22(arg1, arg2)
    var63 = func7(var35, var19)
    if var19 < var19:
        var64 = var63 - (var35 | var63)
    else:
        var64 = (arg2 - arg2) ^ 373154718 ^ var63
    var65 = (var35 & (-802 - 1702332472 - (((var19 & arg2) + (-667795138 | arg1) | var35) ^ var63 | (-2109749890 ^ -867) | var35 + var35 | 1811970148 ^ var19 + var35) - var63 ^ 598) & var35 & var35 ^ var63) & var35
    var66 = ((-120278249 + var63) & -1120713597 & (var65 | arg1)) - (var65 & (((var19 + -1536739687 & ((arg1 - arg1 & var19 + -656002773 | ((347519746 ^ 1904916977 & var65) | arg1)) ^ var35)) - var65) + 882 - var19) | arg1 - var63)
    var67 = var65 - var35 + (arg1 - var19) - -886 - (arg2 + var65 | ((arg1 & arg2) + (var63 - (var63 & var19 & (arg1 | (var66 ^ var66 & (arg2 | arg2 - arg1)) + var65))) ^ 1415574178 ^ var19) | var66)
    var68 = -214734368 ^ var66 & (var19 ^ var19)
    result = (arg2 ^ -922292055) + var35 + arg1 - -1423169681 ^ var65 & arg1
    return result
def func7(arg36, arg37):
    var38 = (arg36 + 865 & arg36) + -898
    var39 = 911806862 | -664020791
    var40 = (arg36 & var39 ^ arg36) ^ arg36
    var41 = 1740791013 | (arg36 | -489)
    if arg36 < var40:
        var42 = arg36 & arg36 ^ arg37
    else:
        var42 = (arg37 + (arg36 | var41)) & var38
    if var38 < var39:
        var43 = var38 - var41
    else:
        var43 = (-110178193 - arg36) & arg36
    var44 = var38 - arg36 + var41
    var45 = var41 + var38 + arg37
    var46 = (var39 | arg36) | var39
    var47 = -15860744 & (-574096205 | var45)
    var48 = (-800 | var44) ^ -519206715
    var49 = var46 | 38014069
    if var44 < var41:
        var50 = arg36 - var46 - var46 + var41
    else:
        var50 = var44 ^ var45
    var51 = var38 & arg36 | var45 - var47
    var52 = (var47 + var39) & arg37 - var48
    var53 = var45 - var49
    var54 = var53 + (var45 & var46 ^ var45)
    var55 = arg37 & -543 + arg36 & 478
    var56 = var54 & 87
    var57 = 2098740897 - var52 ^ -238 | var55
    var58 = ((var48 ^ var55) | var56) & var46
    if var40 < var41:
        var59 = arg36 | (var57 & var53)
    else:
        var59 = (var52 + var38 + var41) - var53
    var60 = var38 - var54 | var48
    var61 = arg36 - var40
    var62 = var51 & var44 | arg36 - -1637711273
    result = var45 & ((((var52 & var55 | (var41 - (var54 & var44) | var44 + var51 - var62)) + var51) & var47) & var47)
    return result
def func6(arg23, arg24):
    var25 = arg23 | (-1695077952 ^ 21)
    if var25 < var25:
        var26 = -909985095 + var25 & (arg24 & var25)
    else:
        var26 = (-796 | 353) | 118 ^ arg23
    var27 = -375 ^ var25
    var28 = (arg23 & 1965847659 + var27) - arg23
    var29 = var25 | 1880805364 & arg23 & 243
    var30 = (arg23 + var25 ^ var29) ^ var27
    var31 = var27 ^ ((arg24 - var29) | var25)
    var32 = var31 - var27
    var33 = -89 ^ var30
    var34 = var27 & 1524244127
    result = (-1330182459 - -564 & arg23) | (var29 | var30 + var28 ^ var31 & (var32 | var27) | var27 ^ var34) + var27
    return result
def func5():
    closure = [4]
    def func4(arg20, arg21):
        closure[0] += func6(arg20, arg21)
        return closure[0]
    func = func4
    return func
var22 = func5()
def func2(arg3, arg4):
    var5 = 0
    for var18 in [(i | arg4 & 7 ^ (var5 + var5 & arg3 - i) | i & var5 | 8) + 9 + arg3 for i in func3(var5, arg4)]:
        var5 += var18 & 3
    return var5
def func3(arg6, arg7):
    var8 = arg6 + arg6 & -513 + arg7
    yield var8
    var9 = (208 - 1381058761 + arg7) & var8
    yield var9
    var10 = var8 + var9
    yield var10
    var11 = var8 - -363
    yield var11
    var12 = var11 - var10
    yield var12
    var13 = var11 ^ var9 + var11 - 351590905
    yield var13
    var14 = var10 - var12 ^ var13 & var10
    yield var14
    var15 = (arg7 + arg7) ^ var13 | arg7
    yield var15
    var16 = var14 | var13
    yield var16
    var17 = arg7 - var13
    yield var17
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 8'
    print 'arg_number: 69'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    var19 = func2(arg2, arg1)
    var35 = var22(arg1, arg2)
    var63 = func7(var35, var19)
    if var19 < var19:
        var64 = var63 - (var35 | var63)
    else:
        var64 = (arg2 - arg2) ^ 373154718 ^ var63
    var65 = (var35 & (-802 - 1702332472 - (((var19 & arg2) + (-667795138 | arg1) | var35) ^ var63 | (-2109749890 ^ -867) | var35 + var35 | 1811970148 ^ var19 + var35) - var63 ^ 598) & var35 & var35 ^ var63) & var35
    var66 = ((-120278249 + var63) & -1120713597 & (var65 | arg1)) - (var65 & (((var19 + -1536739687 & ((arg1 - arg1 & var19 + -656002773 | ((347519746 ^ 1904916977 & var65) | arg1)) ^ var35)) - var65) + 882 - var19) | arg1 - var63)
    var67 = var65 - var35 + (arg1 - var19) - -886 - (arg2 + var65 | ((arg1 & arg2) + (var63 - (var63 & var19 & (arg1 | (var66 ^ var66 & (arg2 | arg2 - arg1)) + var65))) ^ 1415574178 ^ var19) | var66)
    var68 = -214734368 ^ var66 & (var19 ^ var19)
    result = (arg2 ^ -922292055) + var35 + arg1 - -1423169681 ^ var65 & arg1
    return result
def func7(arg36, arg37):
    var38 = (arg36 + 865 & arg36) + -898
    var39 = 911806862 | -664020791
    var40 = (arg36 & var39 ^ arg36) ^ arg36
    var41 = 1740791013 | (arg36 | -489)
    if arg36 < var40:
        var42 = arg36 & arg36 ^ arg37
    else:
        var42 = (arg37 + (arg36 | var41)) & var38
    if var38 < var39:
        var43 = var38 - var41
    else:
        var43 = (-110178193 - arg36) & arg36
    var44 = var38 - arg36 + var41
    var45 = var41 + var38 + arg37
    var46 = (var39 | arg36) | var39
    var47 = -15860744 & (-574096205 | var45)
    var48 = (-800 | var44) ^ -519206715
    var49 = var46 | 38014069
    if var44 < var41:
        var50 = arg36 - var46 - var46 + var41
    else:
        var50 = var44 ^ var45
    var51 = var38 & arg36 | var45 - var47
    var52 = (var47 + var39) & arg37 - var48
    var53 = var45 - var49
    var54 = var53 + (var45 & var46 ^ var45)
    var55 = arg37 & -543 + arg36 & 478
    var56 = var54 & 87
    var57 = 2098740897 - var52 ^ -238 | var55
    var58 = ((var48 ^ var55) | var56) & var46
    if var40 < var41:
        var59 = arg36 | (var57 & var53)
    else:
        var59 = (var52 + var38 + var41) - var53
    var60 = var38 - var54 | var48
    var61 = arg36 - var40
    var62 = var51 & var44 | arg36 - -1637711273
    result = var45 & ((((var52 & var55 | (var41 - (var54 & var44) | var44 + var51 - var62)) + var51) & var47) & var47)
    return result
def func6(arg23, arg24):
    var25 = arg23 | (-1695077952 ^ 21)
    if var25 < var25:
        var26 = -909985095 + var25 & (arg24 & var25)
    else:
        var26 = (-796 | 353) | 118 ^ arg23
    var27 = -375 ^ var25
    var28 = (arg23 & 1965847659 + var27) - arg23
    var29 = var25 | 1880805364 & arg23 & 243
    var30 = (arg23 + var25 ^ var29) ^ var27
    var31 = var27 ^ ((arg24 - var29) | var25)
    var32 = var31 - var27
    var33 = -89 ^ var30
    var34 = var27 & 1524244127
    result = (-1330182459 - -564 & arg23) | (var29 | var30 + var28 ^ var31 & (var32 | var27) | var27 ^ var34) + var27
    return result
def func5():
    closure = [4]
    def func4(arg20, arg21):
        closure[0] += func6(arg20, arg21)
        return closure[0]
    func = func4
    return func
var22 = func5()
def func2(arg3, arg4):
    var5 = 0
    for var18 in [(i | arg4 & 7 ^ (var5 + var5 & arg3 - i) | i & var5 | 8) + 9 + arg3 for i in func3(var5, arg4)]:
        var5 += var18 & 3
    return var5
def func3(arg6, arg7):
    var8 = arg6 + arg6 & -513 + arg7
    yield var8
    var9 = (208 - 1381058761 + arg7) & var8
    yield var9
    var10 = var8 + var9
    yield var10
    var11 = var8 - -363
    yield var11
    var12 = var11 - var10
    yield var12
    var13 = var11 ^ var9 + var11 - 351590905
    yield var13
    var14 = var10 - var12 ^ var13 & var10
    yield var14
    var15 = (arg7 + arg7) ^ var13 | arg7
    yield var15
    var16 = var14 | var13
    yield var16
    var17 = arg7 - var13
    yield var17
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 8'
    print 'arg_number: 69'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    var19 = func2(arg2, arg1)
    var35 = var22(arg1, arg2)
    var63 = func7(var35, var19)
    if var19 < var19:
        var64 = var63 - (var35 | var63)
    else:
        var64 = (arg2 - arg2) ^ 373154718 ^ var63
    var65 = (var35 & (-802 - 1702332472 - (((var19 & arg2) + (-667795138 | arg1) | var35) ^ var63 | (-2109749890 ^ -867) | var35 + var35 | 1811970148 ^ var19 + var35) - var63 ^ 598) & var35 & var35 ^ var63) & var35
    var66 = ((-120278249 + var63) & -1120713597 & (var65 | arg1)) - (var65 & (((var19 + -1536739687 & ((arg1 - arg1 & var19 + -656002773 | ((347519746 ^ 1904916977 & var65) | arg1)) ^ var35)) - var65) + 882 - var19) | arg1 - var63)
    var67 = var65 - var35 + (arg1 - var19) - -886 - (arg2 + var65 | ((arg1 & arg2) + (var63 - (var63 & var19 & (arg1 | (var66 ^ var66 & (arg2 | arg2 - arg1)) + var65))) ^ 1415574178 ^ var19) | var66)
    var68 = -214734368 ^ var66 & (var19 ^ var19)
    result = (arg2 ^ -922292055) + var35 + arg1 - -1423169681 ^ var65 & arg1
    return result
def func7(arg36, arg37):
    var38 = (arg36 + 865 & arg36) + -898
    var39 = 911806862 | -664020791
    var40 = (arg36 & var39 ^ arg36) ^ arg36
    var41 = 1740791013 | (arg36 | -489)
    if arg36 < var40:
        var42 = arg36 & arg36 ^ arg37
    else:
        var42 = (arg37 + (arg36 | var41)) & var38
    if var38 < var39:
        var43 = var38 - var41
    else:
        var43 = (-110178193 - arg36) & arg36
    var44 = var38 - arg36 + var41
    var45 = var41 + var38 + arg37
    var46 = (var39 | arg36) | var39
    var47 = -15860744 & (-574096205 | var45)
    var48 = (-800 | var44) ^ -519206715
    var49 = var46 | 38014069
    if var44 < var41:
        var50 = arg36 - var46 - var46 + var41
    else:
        var50 = var44 ^ var45
    var51 = var38 & arg36 | var45 - var47
    var52 = (var47 + var39) & arg37 - var48
    var53 = var45 - var49
    var54 = var53 + (var45 & var46 ^ var45)
    var55 = arg37 & -543 + arg36 & 478
    var56 = var54 & 87
    var57 = 2098740897 - var52 ^ -238 | var55
    var58 = ((var48 ^ var55) | var56) & var46
    if var40 < var41:
        var59 = arg36 | (var57 & var53)
    else:
        var59 = (var52 + var38 + var41) - var53
    var60 = var38 - var54 | var48
    var61 = arg36 - var40
    var62 = var51 & var44 | arg36 - -1637711273
    result = var45 & ((((var52 & var55 | (var41 - (var54 & var44) | var44 + var51 - var62)) + var51) & var47) & var47)
    return result
def func6(arg23, arg24):
    var25 = arg23 | (-1695077952 ^ 21)
    if var25 < var25:
        var26 = -909985095 + var25 & (arg24 & var25)
    else:
        var26 = (-796 | 353) | 118 ^ arg23
    var27 = -375 ^ var25
    var28 = (arg23 & 1965847659 + var27) - arg23
    var29 = var25 | 1880805364 & arg23 & 243
    var30 = (arg23 + var25 ^ var29) ^ var27
    var31 = var27 ^ ((arg24 - var29) | var25)
    var32 = var31 - var27
    var33 = -89 ^ var30
    var34 = var27 & 1524244127
    result = (-1330182459 - -564 & arg23) | (var29 | var30 + var28 ^ var31 & (var32 | var27) | var27 ^ var34) + var27
    return result
def func5():
    closure = [4]
    def func4(arg20, arg21):
        closure[0] += func6(arg20, arg21)
        return closure[0]
    func = func4
    return func
var22 = func5()
def func2(arg3, arg4):
    var5 = 0
    for var18 in [(i | arg4 & 7 ^ (var5 + var5 & arg3 - i) | i & var5 | 8) + 9 + arg3 for i in func3(var5, arg4)]:
        var5 += var18 & 3
    return var5
def func3(arg6, arg7):
    var8 = arg6 + arg6 & -513 + arg7
    yield var8
    var9 = (208 - 1381058761 + arg7) & var8
    yield var9
    var10 = var8 + var9
    yield var10
    var11 = var8 - -363
    yield var11
    var12 = var11 - var10
    yield var12
    var13 = var11 ^ var9 + var11 - 351590905
    yield var13
    var14 = var10 - var12 ^ var13 & var10
    yield var14
    var15 = (arg7 + arg7) ^ var13 | arg7
    yield var15
    var16 = var14 | var13
    yield var16
    var17 = arg7 - var13
    yield var17
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 8'
    print 'arg_number: 69'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
